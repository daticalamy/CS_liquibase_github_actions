###
globalVariables:
  DATABASE_NAME: ${LB_DATABASENAME}
  DOCKER_IMAGE: server:2022-latest
  DOCKER_CONTAINER: prevalid-mssqlserver

stages:

  ## The first stage of actions
  Default:
    actions:
      # Clone the database 
      #
      - type: shell
#        command: sqlcmd -S localhost -U ${CLONED_UID} -P ${CLONED_PW} -v DBNAME=${DATABASE_NAME} -i clonedb.sql
        command: /opt/mssql-tools18/bin/sqlcmd -b  -U "${LIQUIBASE_COMMAND_USERNAME}" -P "${LIQUIBASE_COMMAND_PASSWORD}" -S "tcp:demo-db1-win.liquibase.net,1433"  -d "master" -Q "DBCC clonedatabase([${DATABASE_NAME}], [${DATABASE_NAME}_eph]) with verify_clonedb"
        
      ##
      ## If using docker
      ## - type: shell
      ##   command: docker run --name ${DOCKER_CONTAINER} -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=yourStrong(!)Password" -p 1433:1433 -d mcr.microsoft.com/mssql/${DOCKER_IMAGE}
      ## - type: shell
      ##   command: docker cp clonedb.sql ${DOCKER_CONTAINER}:/tmp
      ## - type: shell
      ##   command: docker exec -it <container_id|container_name> /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P <yourStrong(!)Password> -v DBNAME=${DATABASE_NAME} -i /tmp/clonedb.sql