#############################################################################
#  GitHub Action to perform a build on the first database, eg. DEV,
#  using Liquibase Pro, Flows, Policy checks, and S3.
##############################################################################
name: 'Liquibase Pro Build Job - New'
run-name: ${{ inputs.environment}} build of current repo by ${{ github.actor }}

on:

  workflow_dispatch:
    # Following are the inputs received via the GitHubActions Run workflow dialog
    inputs:
    
      # The type 'environment' will automatically pull in the environments created in GitHub
      environment:
        description: 'Environment for build'
        type: environment
        required: true
        default: DEV
        
      lb_tag:
        description: 'Optional tag for the build'
        type: string
        required: false

####################################################################
#  Set up the environment
#####################################################################
env:
  # AWS S3 bucket is the host part of the S3 bucket
  # AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  
  # AWS Access credentials use by the Liquibase Pro S3 Extension
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  # Default AWS region
  AWS_REGION: us-east-1
  
  # Pro License key
  # See https://docs.liquibase.com/workflows/liquibase-pro/how-to-apply-your-liquibase-pro-license-key.html
  LIQUIBASE_LICENSE_KEY: ${{ secrets.LIQUIBASE_PRO_LICENSE_KEY }}
  
  # JDBC URL of the database per environment
  # See https://docs.liquibase.com/workflows/liquibase-community/using-jdbc-url-in-liquibase.html
  LIQUIBASE_COMMAND_URL: ${{ secrets.LIQUIBASE_URL }}

  # Credentials for the environment's database https://docs.liquibase.com/parameters/command-parameters.html
  LIQUIBASE_COMMAND_USERNAME: ${{ secrets.LIQUIBASE_USERNAME }}
  LIQUIBASE_COMMAND_PASSWORD: ${{ secrets.LIQUIBASE_PASSWORD }}

  # Liquibase schema: Specified to allow flexibility in storage of Liquibase Change Tracking Tables
  # See https://docs.liquibase.com/parameters/liquibase-schema-name.html
  LIQUIBASE_LIQUIBASE_SCHEMA_NAME: LB
  
  # Default schema: Specify schema for all changes
  # LIQUIBASE_COMMAND_DEFAULT_SCHEMA_NAME: Sales
  # LIQUIBASE_COMMAND_REFERENCE_DEFAULT_SCHEMA_NAME: Sales

  # Search path (See https://docs.liquibase.com/concepts/changelogs/how-liquibase-finds-files.html)
  LIQUIBASE_SEARCH_PATH: flows, checks, changelogs
  
  # The database changelog. See https://docs.liquibase.com/concepts/changelogs/working-with-changelogs.html
  LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog.yaml
  
  ENVIRONMENT: ${{ inputs.environment }}
  BRANCH: ${{ github.ref_name }}
  LB_TAG: ${{ github.event.inputs.lb_tag || github.ref_name }}

  LIQUIBASE_REPORT_PATH: s3://${{ secrets.AWS_S3_BUCKET }}/gha_reports
  # Values: OFF, SEVERE, WARNING, INFO, FINE
  LIQUIBASE_LOG_LEVEL: INFO

jobs:
  #########################################################################
  #  Build
  #########################################################################

  database-build:
    runs-on: [self-hosted]
    environment: ${{ inputs.environment }}
    steps:
    - uses: actions/checkout@v4
    
    # Required for self-hosted runners
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - uses: liquibase/setup-liquibase@v1-beta
      with:
        version: '4.32.0'
        edition: 'pro'

    - name: Download AWS Extension
      run: |
        wget -O liquibase-aws-extension.jar https://repo1.maven.org/maven2/org/liquibase/ext/liquibase-aws-extension/1.0.1/liquibase-aws-extension-1.0.1.jar

    # For set_labels.sh to execute via git, use: git update-index --chmod=+x set_labels.sh      
    # - name: Set Liquibase Labels based on folder path
      # run: |
        # ./flows/set_labels.sh
        # git add changelogs/*
        # git commit -m'Added Liquibase labels to pending changesets' || echo "Nothing to commit"
        # git push origin HEAD:${{ github.ref_name }}
      # env:
        # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Auto-generated

    - name: Liquibase Build Flow
      run: liquibase flow --classpath=liquibase-aws-extension.jar --flow-file=liquibase-build.flowfile.yaml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Auto-generated