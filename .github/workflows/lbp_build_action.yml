#############################################################################
#  GitHub Action to perform a build on the first database, eg. DEV,
#  using Liquibase Secure, Flows, Policy checks, and Azure Storage.
##############################################################################
name: 'Liquibase Build Job'
run-name: ${{ inputs.environment}} build of current repo by ${{ github.actor }}

on:
  workflow_dispatch:
    # Following are the inputs received via the GitHubActions Run workflow dialog
    inputs:
      # The type 'environment' will automatically pull in the environments created in GitHub
      environment:
        description: 'Environment for build'
        type: environment
        required: true
        default: DEV
        
      lb_tag:
        description: 'Optional tag for the build'
        type: string
        required: false

####################################################################
#  Set up the environment
#####################################################################
env:

  # Azure Storage account and container to hold reports
  LIQUIBASE_AZURE_STORAGE_ACCOUNT: cssnapshots
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_CONTAINER: reports
  
  # Pro License key
  # See https://docs.liquibase.com/workflows/liquibase-pro/how-to-apply-your-liquibase-pro-license-key.html
  LIQUIBASE_LICENSE_KEY: ${{ secrets.LIQUIBASE_PRO_LICENSE_KEY }}
  
  # JDBC URL of the database per environment
  # See https://docs.liquibase.com/workflows/liquibase-community/using-jdbc-url-in-liquibase.html
  LIQUIBASE_COMMAND_URL: ${{ secrets.LIQUIBASE_URL }}

  # Credentials for the environment's database https://docs.liquibase.com/parameters/command-parameters.html
  LIQUIBASE_COMMAND_USERNAME: ${{ secrets.LIQUIBASE_USERNAME }}
  LIQUIBASE_COMMAND_PASSWORD: ${{ secrets.LIQUIBASE_PASSWORD }}

  # Liquibase schema: Specified to allow flexibility in storage of Liquibase Change Tracking Tables
  # See https://docs.liquibase.com/parameters/liquibase-schema-name.html
  LIQUIBASE_LIQUIBASE_SCHEMA_NAME: LB
  
  # Default schema: Specify schema for all changes
  # LIQUIBASE_COMMAND_DEFAULT_SCHEMA_NAME: Sales
  # LIQUIBASE_COMMAND_REFERENCE_DEFAULT_SCHEMA_NAME: Sales

  # Search path (See https://docs.liquibase.com/concepts/changelogs/how-liquibase-finds-files.html)
  LIQUIBASE_SEARCH_PATH: flows, checks, changelogs
  
  # The database changelog. See https://docs.liquibase.com/concepts/changelogs/working-with-changelogs.html
  LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog.yaml
  
  ENVIRONMENT: ${{ inputs.environment }}
  BRANCH: ${{ github.ref_name }}
  LB_TAG: ${{ github.event.inputs.lb_tag || github.ref_name }}

  LIQUIBASE_REPORT_PATH: az://${{ env.AZURE_CONTAINER }}/gh_sqlserver/reports
  
  # Values: OFF, SEVERE, WARNING, INFO, FINE
  LIQUIBASE_LOG_LEVEL: INFO
  LIQUIBASE_LOG_FORMAT: JSON_PRETTY
  LIQUIBASE_LOG_FILE: logs/log.json
  LIQUIBASE_DBCLHISTORY_ENABLED: true

jobs:
  #########################################################################
  #  Build
  #########################################################################

  database-build:
    runs-on: [self-hosted]
    environment: ${{ inputs.environment }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Liquibase Environment
      uses: ./.github/workflows/setup-liquibase
      
    - name: Liquibase Checks Flow
      id: lbp-policy-checks
      continue-on-error: true
      run: | 
        set +e
        # CHECKS_STATUS=$(liquibase flow --classpath=liquibase-aws-extension.jar --flow-file=liquibase-checks.flowfile.yaml 2>&1)
        CHECKS_STATUS=$(liquibase flow --flow-file=liquibase-checks.flowfile.yaml 2>&1)
        EXIT_CODE=$?
        set -e
        if [ $EXIT_CODE -eq 1 ]; then
          echo "::error::Policy checks did not pass, but allowing build to complete."
          echo "::error::In non-build environments, this deployment will require Manual Approval."
          exit $EXIT_CODE
        fi

    - name: Liquibase Build Flow
      # run: liquibase flow --classpath=liquibase-aws-extension.jar --flow-file=liquibase-build.flowfile.yaml
      run: liquibase flow --flow-file=liquibase-build.flowfile.yaml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Auto-generated
