####################################################################
#  GitHub Action to perform an environment-targeted deployment of
#  database changes using Liquibase Pro, Liquibase Pro Flows,
#  Custom Quality checks and S3.
#####################################################################
name: 'Liquibase Pro Deployment Job - New'
run-name: ${{ inputs.environment}} deployment of current repo by ${{ github.actor }}

on:

  workflow_dispatch:
    # Following are the inputs received via the GitHubActions Run workflow dialog
    inputs:
      # The type 'environment' will automatically pull in the environments created in GitHub
      environment:
        description: 'Environment for deployment'
        type: environment
        required: true

      lb_tag:
        description: 'Optional tag for the build'
        type: string
        required: false
        
      check_drift:
        description: 'Check for Drift Detection'
        type: boolean
        required: true
        default: true

####################################################################
#  Set up the environment
#####################################################################
env:
  # AWS S3 bucket is the host part of the S3 bucket
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  
  # AWS Access credentials use by the Liquibase Pro S3 Extension
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  # Default AWS region
  AWS_REGION: us-east-1
  
  # Pro License key
  # See https://docs.liquibase.com/workflows/liquibase-pro/how-to-apply-your-liquibase-pro-license-key.html
  LIQUIBASE_LICENSE_KEY: ${{ secrets.LIQUIBASE_PRO_LICENSE_KEY }}
  
  # JDBC URL of the database per environment
  # See https://docs.liquibase.com/workflows/liquibase-community/using-jdbc-url-in-liquibase.html
  LIQUIBASE_COMMAND_URL: ${{ secrets.LIQUIBASE_URL }}

  # Credentials for the environment's database https://docs.liquibase.com/parameters/command-parameters.html
  LIQUIBASE_COMMAND_USERNAME: ${{ secrets.LIQUIBASE_USERNAME }}
  LIQUIBASE_COMMAND_PASSWORD: ${{ secrets.LIQUIBASE_PASSWORD }}

  # Liquibase schema: Specified to allow flexibility in storage of Liquibase Change Tracking Tables
  # See https://docs.liquibase.com/parameters/liquibase-schema-name.html
  LIQUIBASE_LIQUIBASE_SCHEMA_NAME: LB
  
  # Default schema: Specify schema for all changes
  # LIQUIBASE_COMMAND_DEFAULT_SCHEMA_NAME: Sales
  # LIQUIBASE_COMMAND_REFERENCE_DEFAULT_SCHEMA_NAME: Sales

  # Search path (See https://docs.liquibase.com/concepts/changelogs/how-liquibase-finds-files.html)
  LIQUIBASE_SEARCH_PATH: flows, checks, changelogs
  
  # The database changelog. See https://docs.liquibase.com/concepts/changelogs/working-with-changelogs.html
  LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog.yaml
  
  ENVIRONMENT: ${{ inputs.environment }}
  LB_TAG: ${{ github.event.inputs.lb_tag || github.ref_name }}
  LIQUIBASE_REPORT_PATH: s3://${{ secrets.AWS_S3_BUCKET }}/gha_reports
  # Values: OFF, SEVERE, WARNING, INFO, FINE
  LIQUIBASE_LOG_LEVEL: INFO
  LB_CHECK_DRIFT: ${{ github.event.inputs.check_drift }}
  LB_SCHEMAS: "DBO,Sales"

jobs:
  #########################################################################
  #  Deploy
  #########################################################################

  database-deploy:
    runs-on: [self-hosted]
    environment: ${{ inputs.environment }}
    outputs:
      needs_approval: ${{ steps.lbp-policy-checks.outputs.needs_approval }}
      exit_message: ${{ steps.lbp-policy-checks.outputs.exit_message }}
    steps:
    - uses: actions/checkout@v4
   
    # Required for self-hosted runners
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - uses: liquibase/setup-liquibase@v1-beta
      with:
        version: '4.32.0'
        edition: 'pro'

    - name: Download AWS Extension
      run: |
        wget -O liquibase-aws-extension.jar https://repo1.maven.org/maven2/org/liquibase/ext/liquibase-aws-extension/1.0.1/liquibase-aws-extension-1.0.1.jar

    - name: Liquibase Checks Flow
      id: lbp-policy-checks
      run: | 
        liquibase flow --classpath=liquibase-aws-extension.jar --flow-file=liquibase-checks.flowfile.yaml
      
        set +e
        CHECKS_STATUS=$(liquibase flow --classpath=liquibase-aws-extension.jar --flow-file=liquibase-checks.flowfile.yaml 2>&1)
        EXIT_CODE=$?
        set -e
        
        if [ $EXIT_CODE -eq 1 ]; then          
          echo "needs_approval=true" >> $GITHUB_OUTPUT
          echo "exit_message=❌ Liquibase checks failed - manual review required" >> $GITHUB_OUTPUT
          echo "✋ Manual approval will be required"
        else
          echo "needs_approval=false" >> $GITHUB_OUTPUT
          echo "exit_message=✅ Liquibase checks passed" >> $GITHUB_OUTPUT
          echo "✅ Proceeding automatically"
        fi
        echo "Test msg C"
      
  manual-approval:
    runs-on: [self-hosted]
    needs: database-deploy
    environment: manual-approval
    if: needs.database-deploy.outputs.needs_approval == 'true'
    steps:
    - name: Request manual approval
      run: |
        echo "🚨 Manual approval required!"
        echo "Exit message: ${{ needs.database-deploy.outputs.exit_message }}"
        echo "Click 'Review deployments' to approve or reject this deployment."
        echo ""
        echo "To approve: Click 'Review deployments' button above"
        echo "Environment: ${{ inputs.environment }}"
      
  deploy:
    runs-on: [self-hosted]
    needs: [database-deploy, manual-approval]
    environment: ${{ inputs.environment }}
    if: always() && (needs.database-deploy.outputs.needs_approval == 'false' || needs.manual-approval.result == 'success')
    steps:
    - uses: actions/checkout@v4    

    # Required for self-hosted runners
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - uses: liquibase/setup-liquibase@v1-beta
      with:
        version: '4.32.0'
        edition: 'pro'

    - name: Download AWS Extension
      run: |
        wget -O liquibase-aws-extension.jar https://repo1.maven.org/maven2/org/liquibase/ext/liquibase-aws-extension/1.0.1/liquibase-aws-extension-1.0.1.jar

    - name: Liquibase Deploy Flow
      run: liquibase flow --classpath=liquibase-aws-extension.jar --flow-file=liquibase-deploy.flowfile.yaml